name: Tests

on:
  repository_dispatch:
    types: [trigger-test-workflow]

env:
  DOTNET_VERSION: '6.0.x' # The .NET SDK version to use for testing
  GET_COLOR: 'function getColor { total=$1; if (( $(echo "$total <= 25" | bc -l) )) ; then   COLOR=red; elif (( $(echo "$total >= 100" | bc -l) )); then   COLOR=brightgreen; elif (( $(echo "$total > 85" | bc -l) )); then   COLOR=green; elif (( $(echo "$total > 70" | bc -l) )); then   COLOR=yellow; else   COLOR=orange; fi; echo $COLOR; }'

permissions:
      id-token: write
      contents: read

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.sha }}
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Install dependencies
        run: dotnet restore
        
      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal --collect:"XPlat Code Coverage"

      - name: Copy coverage files
        run: |
          cp ./EntitiesTests/TestResults/*/coverage.cobertura.xml ./entitiesCoverage.xml
          cp ./BusinessLogicTests/TestResults/*/coverage.cobertura.xml ./businesslogicCoverage.xml
          cp ./EntryTests/TestResults/*/coverage.cobertura.xml ./entryCoverage.xml
          cp ./DataAccessTests/TestResults/*/coverage.cobertura.xml ./dataaccessCoverage.xml

      - name: Badge setup
        run: |
          mkdir badges
      
      - name: Get entities badge
        run: |
          ${{ env.GET_COLOR }}
          total=$(cat entitiesCoverage.xml | grep -oP 'package name="Entities" line-rate="\K[^"]+')
          total=$(echo "scale=0; $total*100/1" | bc)
          getColor $total > COLOR
          curl "https://img.shields.io/badge/Entities%20Test%20Coverage-$total%25-$COLOR" > ./badges/nhlDataCleanerEntitiesBadge.svg
      
      - name: Get business logic badge
        run: |
          ${{ env.GET_COLOR }}
          total=$(cat businesslogicCoverage.xml | grep -oP 'package name="BusinessLogic" line-rate="\K[^"]+')
          total=$(echo "scale=0; $total*100/1" | bc)
          getColor $total > COLOR
          curl "https://img.shields.io/badge/Business%20Logic%20Test%20Coverage-$total%25-$COLOR" > ./badges/nhlDataCleanerBusinessLogicBadge.svg
      
      - name: Get entry badge
        run: |
          ${{ env.GET_COLOR }}
          total=$(cat entryCoverage.xml | grep -oP 'package name="Entry" line-rate="\K[^"]+')
          total=$(echo "scale=0; $total*100/1" | bc)
          getColor $total > COLOR
          curl "https://img.shields.io/badge/Entry%20Test%20Coverage-$total%25-$COLOR" > ./badges/nhlDataCleanerEntryBadge.svg

      - name: Get data access badge
        run: |
          ${{ env.GET_COLOR }}
          total=$(cat dataaccessCoverage.xml | grep -oP 'package name="DataAccess" line-rate="\K[^"]+')
          total=$(echo "scale=0; $total*100/1" | bc)
          getColor $total > COLOR
          curl "https://img.shields.io/badge/Data%20Access%20Test%20Coverage-$total%25-$COLOR" > ./badges/nhlDataCleanerDataAccessBadge.svg

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Upload badge svgs
        run: az storage blob upload-batch -s ./badges -d badges --pattern "*.svg" --overwrite true --content-cache-control "no-cache" --account-name "nhlblobstorage" --destination "repobadges"

      - name: Trigger next workflow
        if: success()
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_PAT }}
          repository: ${{ github.repository }}
          event-type: trigger-docker-workflow
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'